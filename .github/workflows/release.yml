# When creating a release make sure to:
# 1. Update CHANGELOG.md
# 2. Update version in package.json
# 3. Merge into main branch
#
# If you need to re-release (broken build), first remove the release
# as well as the tag. Once that is done you can push a fix, or just
# re-run the release action.

name: Release

on:
  push:
    branches:
      - main

jobs:
  build-application:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps: 
      - name: Checkout ctcast
        uses: actions/checkout@v2

      - name: Get release info
        id: release_info
        shell: bash
        run: |
          version="$(cat package.json | jq -r .version)"
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            changelog="$(sed -e "1,/^## ${version}/d" -e "/^## /,\$d" -e '/^$/d' CHANGELOG.md)"
            changelog="${changelog//'%'/'%25'}"
            echo -e "${changelog}" >> release.body.txt
          else
            echo -en "" >> release.body.txt
          fi
          echo "VERSION=${version}" >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 16
          
      - name: Install dependencies
        run: npm install
        
      - name: Build
        run: npm run make

      - name: List output
        run: ls -R out

# out\ctcast-win32-x64        
# out\make\squirrel.windows\x64\{ctcast-0.1.2-pre Setup.exe,ctcast-0.1.2-pre-full.nupkg,RELEASES}

      - name: Create tgz archive      
        run: tar -cvzf ../ctcast-${{runner.os}}.tgz ctcast-*
        working-directory: out

      - name: Upload archive
        uses: actions/upload-artifact@v2
        with:
          name: release-${{runner.os}}
          path: ctcast*.tgz
          
      - name: Upload Windows installers
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v2
        with:
          name: release-${{runner.os}}
          path: ./out/make/squirrel.windows/x64/
          
  publish:
    needs: build-application
    
    runs-on: ubuntu-latest

    permissions:
      contents: write
      
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
 
      - name: List artifacts
        run: ls -R
      
      # create the release, if anything fails later, you will need to delete the 
      # release as well as the tags.
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          body_path: release.body.txt
          files: |
            release-Windows/ctcast-*
            release-Linux/ctcast-*
            release-macOS/ctcast-*
          
# Todo code sign
# https://www.electronforge.io/guides/code-signing/code-signing-macos
# https://www.electronforge.io/guides/code-signing/code-signing-windows

