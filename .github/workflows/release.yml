# When creating a release make sure to:
# 1. Update CHANGELOG.md
# 2. Update version in package.json
# 3. Merge into main branch
#
# If you need to re-release (broken build), first remove the release
# as well as the tag. Once that is done you can push a fix, or just
# re-run the release action.

name: Release

# Controls when the workflow will run
on:
  push:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Get release info
        id: release_info
        shell: bash
        run: |
          version="$(cat package.json | jq -r .version)"
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            changelog="$(sed -e "1,/^## ${version}/d" -e "/^## /,\$d" -e '/^$/d' CHANGELOG.md)"
            changelog="${changelog//'%'/'%25'}"
            echo -e "${changelog}" >> release.body.txt
          else
            echo -en "" >> release.body.txt
          fi
          echo "VERSION=${version}" >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 16
          
      - name: Install dependencies
        run: npm install
        
      - name: Build
        run: npm run make

      # create the release, if anything fails later, you will need to delete the 
      # release as well as the tags.
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          body_path: release.body.txt
          files: |
            out/make/**/*.*
